@model FinancialStatistics
@{
    Layout = "_MainLayout";
    var previous_year_params = new Dictionary<string, string> {{ "year",  (Model.getYear() - 1).ToString()}};
    var next_year_params = new Dictionary<string, string> {{ "year",  (Model.getYear() + 1).ToString()}};
}

<div class="jumbotron text-center">
    <h1>Main Financials Page</h1>
</div>
<div class="container">
    <div class="card mt-3">
        <div class="card-body">
            <h1>Yearly Income/Expenses</h1>
            <div class="btn-group">
                <a role="button" asp-action="Index" asp-controller="Financial" asp-all-route-data="previous_year_params" class="btn btn-outline-primary">🠜</a>
                <a role="button" class="btn btn-outline-dark disabled">@Model.getYear()</a>
                <a role="button" asp-action="Index" asp-controller="Financial" asp-all-route-data="next_year_params" class="btn btn-outline-primary">🠞 </a>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 mt-3">
            <div class="card">
                <div class="card-body">
                    <h4>Amount Owed</h4>
                    <h2>$@Model.OwedAmount()</h2>
                    <hr />
                    <h4>Amount Paid</h4>
                    <h2>$@Model.PaidAmount()</h2>
                </div>
            </div>
        </div>

        <div class="col-md-8 mt-3">
            <div class="card card-default">
                <div class="card-body">
                    <canvas id="myChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
var ctx = document.getElementById('myChart').getContext('2d');
var chart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', "Aug", "Sep", "Oct", "Nov", "Dec"],
        datasets: [{
            label: 'Amounts Owed',
            borderColor: 'rgb(33, 33, 33)',
            data: [@Model.OwedAmount(1), @Model.OwedAmount(2), @Model.OwedAmount(3), @Model.OwedAmount(4), @Model.OwedAmount(5), @Model.OwedAmount(6), @Model.OwedAmount(7), @Model.OwedAmount(8), @Model.OwedAmount(9), @Model.OwedAmount(10), @Model.OwedAmount(11), @Model.OwedAmount(12)]
        },
        {   label: 'Amounts Paid',
            borderColor: 'rgb(255, 30, 60)',
             data: [@Model.PaidAmount(1), @Model.PaidAmount(2), @Model.PaidAmount(3), @Model.PaidAmount(4), @Model.PaidAmount(5), @Model.PaidAmount(6), @Model.PaidAmount(7), @Model.PaidAmount(8), @Model.PaidAmount(9), @Model.PaidAmount(10), @Model.PaidAmount(11), @Model.PaidAmount(12)]
        }]
    },
    options: {}
});
</script>